load Elm@new(tag: str, parent: int): int;
load Elm@update(id: int, prp: str, content: str): void;
load Elm@event(id: int, name: str, func: str): void;
load Elm@get(id: int, prp: str): str;
load concat(a: str, b: str): str;
load to_str(n: num): str;
load to_num(s: str): num;

overload concat = str + str;
pub let render = "innerHTML";

let is_prime(n: int) = {
    if n < 2 then false
    else if n < 4 then true
    else if (n % 2 == 0) || (n % 3 == 0) then false
    else {
        let i = 5;
        while i * i <= n loop {
            if n % i == 0 then {
                return false
            };
            let i + 6
        };
        true
    }
};

let frame = {
    let frame = "div".new_elm(-1);
    frame.upd_elm("style", "margin: 100px");
    let title = new_elm("h1", frame);
    title.upd_elm(render, "Prime App");
    frame
};

pub let input = "input".new_elm(frame);
pub let view = "p".new_elm(frame);

let button = {
    let button = "button".new_elm(frame);
    button.upd_elm(render, "Judge");
    button.evt_elm("click", "judge");
    button
};

pub let judge() = {
    let value = input.prp_elm("value"): int;
    let result = {
        if is_prime(value)
            then "prime"
            else "dividable"
    };
    view.upd_elm(render, f"Result: {value} is {result} number")
}
