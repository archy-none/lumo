type LinkList = @{ car: int, cdr: LinkList };

let node(value: int) = memcpy(@{ car: value, cdr: LinkList! });
let append(self: LinkList, other: LinkList) = {
    let current = self;
    while current.cdr? loop {
        let current = current.cdr
    };
    let current.cdr = other;
    self
};
let clone(self: LinkList) = {
    let object = self.memcpy();
    if object.cdr? then {
        let object.cdr = clone(self.cdr)
    };
    object
};

overload append = LinkList + LinkList;

let a = node(1);
let b = node(2).append(node(3));
a + b + b.clone()
